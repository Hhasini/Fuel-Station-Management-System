/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package HRM;

import EmpView.EMPLOYEE_VIEW_MAIN;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;
import mycode.DBconnect;

public class LOGIN extends javax.swing.JFrame {

    Connection con = null;
    PreparedStatement pst = null;
    ResultSet rs = null;

   

    /**
     * Creates new form LOGIN_ADMIN
     */
    public LOGIN() {
        initComponents();
 this.setLocationRelativeTo(null);
        con = DBconnect.connect();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        UN = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        pwd = new javax.swing.JPasswordField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("LOGIN");
        setResizable(false);

        jPanel2.setBackground(new java.awt.Color(0, 102, 51));
        jPanel2.setForeground(new java.awt.Color(255, 255, 255));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText(" User Name");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText(" Password");

        jButton2.setBackground(new java.awt.Color(255, 255, 255));
        jButton2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton2.setForeground(new java.awt.Color(0, 204, 51));
        jButton2.setText("LOGIN");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jButton2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton2KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jButton2KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jButton2KeyTyped(evt);
            }
        });

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/HRM/images/login.png"))); // NOI18N
        jLabel5.setText("jLabel5");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(77, 77, 77)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(UN, javax.swing.GroupLayout.DEFAULT_SIZE, 212, Short.MAX_VALUE)
                            .addComponent(pwd))
                        .addGap(44, 44, 44))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 194, Short.MAX_VALUE)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(191, 191, 191))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 339, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(144, 144, 144)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(UN, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(32, 32, 32)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pwd, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(38, 38, 38)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(88, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 806, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 480, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getAccessibleContext().setAccessibleDescription("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        String uname = UN.getText();
        char[] pass = pwd.getPassword();
        String p = String.valueOf(pass);

        try {
            if(uname.equals("") || p.equals("")){
                JOptionPane.showMessageDialog(null, "You haven't fill all the details. Please fill All!!!!");
            }
            else if (uname != null && uname.split("_").length > 1 && uname.split("_")[1].equals("EMP")) {
                boolean valiUser = false;
                int userId  = -1;
//                String query = "select EmpID "
//                        + "from employee where Name='" + uname + "' and Password='" + p + "'";
                
                  String query = "select EmpID "
                        + "from employee where username='" + uname + "' and Password='" + p + "'";
                
                
                pst = con.prepareStatement(query);
                rs = pst.executeQuery();
                while (rs.next()) {
                    valiUser = true;
                    userId = rs.getInt("EmpID");
                }
                
                if(valiUser){
                    EMPLOYEE_VIEW_MAIN empView = new EMPLOYEE_VIEW_MAIN();
                    empView.setVisible(true);
                    empView.setUserId(userId);
                    empView.setUserType("EMP");
                    this.dispose();
                }else{
                    JOptionPane.showMessageDialog(null, "Invalid credentials..");
                }
                
                

            } 
            else if (uname != null && uname.split("_").length > 1 && uname.split("_")[1].equals("MGR")) {
                
                boolean valiUser = false;
                int userId = -1;
//                String query1 = "select MID "
//                        + "from manager where Name='" + uname + "' and password='" + p + "'";
//                
                String query1 = "select MID "
                        + "from manager where username='" + uname + "' and password='" + p + "'";
                
                
                pst = con.prepareStatement(query1);
                rs = pst.executeQuery();
                while (rs.next()) {
                    valiUser = true;
                    userId = rs.getInt("MID");
                }
                
                
                
                
                
                if(valiUser){
                
                MANAGER_VIEW_MAIN empView = new MANAGER_VIEW_MAIN();
                empView.setVisible(true);
                empView.setUserId(userId);
                empView.setUserType("MGR");
                this.dispose();
            }else{
                    JOptionPane.showMessageDialog(null, "Invalid credentials..");
                }
        
            
            }

        } catch (Exception e) {
            System.out.println(e.getMessage());
        }

       

    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton2KeyPressed
    String uname = UN.getText();
        char[] pass = pwd.getPassword();
        String p = String.valueOf(pass);

        try {
            if(uname.equals("") || p.equals("")){
                JOptionPane.showMessageDialog(null, "You haven't fill all the details. Please fill All!!!!");
            }
            else if (uname != null && uname.split("_").length > 1 && uname.split("_")[1].equals("EMP")) {
                boolean valiUser = false;
                int userId  = -1;
//                String query = "select EmpID "
//                        + "from employee where Name='" + uname + "' and Password='" + p + "'";
                
                  String query = "select EmpID "
                        + "from employee where username='" + uname + "' and Password='" + p + "'";
                
                
                pst = con.prepareStatement(query);
                rs = pst.executeQuery();
                while (rs.next()) {
                    valiUser = true;
                    userId = rs.getInt("EmpID");
                }
                
                if(valiUser){
                    EMPLOYEE_VIEW_MAIN empView = new EMPLOYEE_VIEW_MAIN();
                    empView.setVisible(true);
                    empView.setUserId(userId);
                    empView.setUserType("EMP");
                    this.dispose();
                }else{
                    JOptionPane.showMessageDialog(null, "Invalid credentials..");
                }
                
                

            } 
            else if (uname != null && uname.split("_").length > 1 && uname.split("_")[1].equals("MGR")) {
                
                boolean valiUser = false;
                int userId = -1;
//                String query1 = "select MID "
//                        + "from manager where Name='" + uname + "' and password='" + p + "'";
//                
                String query1 = "select MID "
                        + "from manager where username='" + uname + "' and password='" + p + "'";
                
                
                pst = con.prepareStatement(query1);
                rs = pst.executeQuery();
                while (rs.next()) {
                    valiUser = true;
                    userId = rs.getInt("MID");
                }
                
                
                
                
                
                if(valiUser){
                
                MANAGER_VIEW_MAIN empView = new MANAGER_VIEW_MAIN();
                empView.setVisible(true);
                empView.setUserId(userId);
                empView.setUserType("MGR");
                this.dispose();
            }else{
                    JOptionPane.showMessageDialog(null, "Invalid credentials..");
                }
        
            
            }

        } catch (Exception e) {
            System.out.println(e.getMessage());
        }

       
    }//GEN-LAST:event_jButton2KeyPressed

    private void jButton2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton2KeyTyped
       String uname = UN.getText();
        char[] pass = pwd.getPassword();
        String p = String.valueOf(pass);

        try {
            if(uname.equals("") || p.equals("")){
                JOptionPane.showMessageDialog(null, "You haven't fill all the details. Please fill All!!!!");
            }
            else if (uname != null && uname.split("_").length > 1 && uname.split("_")[1].equals("EMP")) {
                boolean valiUser = false;
                int userId  = -1;
//                String query = "select EmpID "
//                        + "from employee where Name='" + uname + "' and Password='" + p + "'";
                
                  String query = "select EmpID "
                        + "from employee where username='" + uname + "' and Password='" + p + "'";
                
                
                pst = con.prepareStatement(query);
                rs = pst.executeQuery();
                while (rs.next()) {
                    valiUser = true;
                    userId = rs.getInt("EmpID");
                }
                
                if(valiUser){
                    EMPLOYEE_VIEW_MAIN empView = new EMPLOYEE_VIEW_MAIN();
                    empView.setVisible(true);
                    empView.setUserId(userId);
                    empView.setUserType("EMP");
                    this.dispose();
                }else{
                    JOptionPane.showMessageDialog(null, "Invalid credentials..");
                }
                
                

            } 
            else if (uname != null && uname.split("_").length > 1 && uname.split("_")[1].equals("MGR")) {
                
                boolean valiUser = false;
                int userId = -1;
//                String query1 = "select MID "
//                        + "from manager where Name='" + uname + "' and password='" + p + "'";
//                
                String query1 = "select MID "
                        + "from manager where username='" + uname + "' and password='" + p + "'";
                
                
                pst = con.prepareStatement(query1);
                rs = pst.executeQuery();
                while (rs.next()) {
                    valiUser = true;
                    userId = rs.getInt("MID");
                }
                
                
                
                
                
                if(valiUser){
                
                MANAGER_VIEW_MAIN empView = new MANAGER_VIEW_MAIN();
                empView.setVisible(true);
                empView.setUserId(userId);
                empView.setUserType("MGR");
                this.dispose();
            }else{
                    JOptionPane.showMessageDialog(null, "Invalid credentials..");
                }
        
            
            }

        } catch (Exception e) {
            System.out.println(e.getMessage());
        }

       
    }//GEN-LAST:event_jButton2KeyTyped

    private void jButton2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton2KeyReleased
       String uname = UN.getText();
        char[] pass = pwd.getPassword();
        String p = String.valueOf(pass);

        try {
            if(uname.equals("") || p.equals("")){
                JOptionPane.showMessageDialog(null, "You haven't fill all the details. Please fill All!!!!");
            }
            else if (uname != null && uname.split("_").length > 1 && uname.split("_")[1].equals("EMP")) {
                boolean valiUser = false;
                int userId  = -1;
//                String query = "select EmpID "
//                        + "from employee where Name='" + uname + "' and Password='" + p + "'";
                
                  String query = "select EmpID "
                        + "from employee where username='" + uname + "' and Password='" + p + "'";
                
                
                pst = con.prepareStatement(query);
                rs = pst.executeQuery();
                while (rs.next()) {
                    valiUser = true;
                    userId = rs.getInt("EmpID");
                }
                
                if(valiUser){
                    EMPLOYEE_VIEW_MAIN empView = new EMPLOYEE_VIEW_MAIN();
                    empView.setVisible(true);
                    empView.setUserId(userId);
                    empView.setUserType("EMP");
                    this.dispose();
                }else{
                    JOptionPane.showMessageDialog(null, "Invalid credentials..");
                }
                
                

            } 
            else if (uname != null && uname.split("_").length > 1 && uname.split("_")[1].equals("MGR")) {
                
                boolean valiUser = false;
                int userId = -1;
//                String query1 = "select MID "
//                        + "from manager where Name='" + uname + "' and password='" + p + "'";
//                
                String query1 = "select MID "
                        + "from manager where username='" + uname + "' and password='" + p + "'";
                
                
                pst = con.prepareStatement(query1);
                rs = pst.executeQuery();
                while (rs.next()) {
                    valiUser = true;
                    userId = rs.getInt("MID");
                }
                
                
                
                
                
                if(valiUser){
                
                MANAGER_VIEW_MAIN empView = new MANAGER_VIEW_MAIN();
                empView.setVisible(true);
                empView.setUserId(userId);
                empView.setUserType("MGR");
                this.dispose();
            }else{
                    JOptionPane.showMessageDialog(null, "Invalid credentials..");
                }
        
            
            }

        } catch (Exception e) {
            System.out.println(e.getMessage());
        }

       
    }//GEN-LAST:event_jButton2KeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LOGIN.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LOGIN.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LOGIN.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LOGIN.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new LOGIN().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField UN;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPasswordField pwd;
    // End of variables declaration//GEN-END:variables
}
